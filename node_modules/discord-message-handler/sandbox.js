const MessageHandler = require("./dist/index").MessageHandler;

function mockMessage(text) {
    return {
        content: text,
        channel: {
            sendMessage: (msg) => console.log(msg),
            send: (msg) => console.log(msg)
        },
        author: "SomeUser#1234"
    }
}

const handler = new MessageHandler();

handler.whenMessageContainsWord("shrug").reply("¯\\_(ツ)_/¯");
handler.whenMessageContains("lol").sometimes(33).reply("kek"); // 33% chance
handler.whenMessageContainsExact("dota").replyOne(["volvo pls", "rip doto"]);
handler.whenMessageContainsOne(["br", "brazil"]).reply("huehue");
handler.whenMessageStartsWith("help").then(message => doSomething(message));

handler 
    .onCommand("/info")
    .minArgs(2)
    .whenInvalid("Invalid command. Usage: /info <a> <b>")
    .matches(/\d \d/) // "\\d \\d"
    .do((args) => {
        console.log("Executing command", args);
    });

handler.handleMessage(mockMessage("/info 1 2"));

handler
    .onCommand("!raid")
    .minArgs(5)
    .matches("(start\\s)([Tt])([1-5]{1})(( \\w+){1,4}\\s)(0{2}|([0-9]|1[0-9]|2[0-3]))(\\:)(0{2}|([0-5][0-9]))")
    .whenInvalid("Invalid command. Usage: !raid start <T1-5> <1-4 words describing place / area> <24h-time>")
    .do((args) => {
        console.log("Executing raid ", args);
    })

handler
    .onCommand("!raid2")
    .minArgs(5)
    .matches(/start\s[Tt][1-5]\s(?:\S+\s+){1,4}\d{2}:\d{2}:\d{2}/)
    .whenInvalid("Invalid command. Usage: !raid start <T1-5> <1-4 words describing place / area> <24h-time>")
    .do((args) => {
        console.log("Executing raid 2", args);
    })

handler
    .onCommand("!roll")
    .minArgs(3)
    .matches(/(\d+)?\s?d(6|20|100)/g)
    .whenInvalid("Invalid command. Usage: `!roll <number of dices> d<type of dice>`. Valid dices: d6, d20, d100")
    .do((args) => {
        // Dice roll logic
        console.log("rolling dice");
    })

// handler.handleMessage(mockMessage("!raid start T2 foo bar lol kek 22:20:20"));
// handler.handleMessage(mockMessage("!raid2 start T2 foo bar lol kek 22:20:20"));
handler.handleMessage(mockMessage("!roll 5 d6"));


// let pattern = new RegExp("\d\s\d")